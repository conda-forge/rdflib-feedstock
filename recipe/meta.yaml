{% set version = "7.1.1" %}

# handle undefined PYTHON when re-rendering `noarch: generic` outputs
{% set PYTHON = PYTHON | default("$PYTHON") %}

package:
  name: rdflib
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/r/rdflib/rdflib-{{ version }}.tar.gz
  sha256: 164de86bd3564558802ca983d84f6616a4a1a420c7a17a8152f5016076b2913e

build:
  number: 1
  noarch: python
  script:
    - {{ PYTHON }} -m pip install . --no-deps -vv --no-build-isolation --disable-pip-version-check
  entry_points:
    - csv2rdf = rdflib.tools.csv2rdf:main
    - rdf2dot = rdflib.tools.rdf2dot:main
    - rdfgraphisomorphism = rdflib.tools.graphisomorphism:main
    - rdfpipe = rdflib.tools.rdfpipe:main
    - rdfs2dot = rdflib.tools.rdfs2dot:main

requirements:
  host:
    - pip
    - poetry-core >=1.4.0
    - python {{ python_min }}
  run:
    - isodate >=0.7.0,<1.0.0
    - pyparsing >=2.1.0,<4
    - python >={{ python_min }}

test:
  requires:
    - pip
    - python {{ python_min }}
  imports:
    - rdflib
  commands:
    - pip check
    # --help doesn't return 0, just check if they are on $PATH/%PATH%
    - which csv2rdf              || where csv2rdf              || exit 1
    - which rdf2dot              || where rdf2dot              || exit 1
    - which rdfgraphisomorphism  || where rdfgraphisomorphism  || exit 1
    - which rdfpipe              || where rdfpipe              || exit 1
    - which rdfs2dot             || where rdfs2dot             || exit 1

outputs:
  - name: rdflib

  - name: rdflib-with-networkx
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("rdflib", max_pin="x.x.x") }}
        - networkx >=2,<4
    test:
      requires:
        - pip
      imports:
        - rdflib
      commands:
        - pip check
        - python -c "from rdflib.extras.external_graph_libs import rdflib_to_networkx_graph; import rdflib; assert rdflib_to_networkx_graph(rdflib.Graph()) is not None"

  - name: rdflib-with-html
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("rdflib", max_pin="x.x.x") }}
        - html5rdf >=1.2,<2
    test:
      requires:
        - pip
      imports:
        - rdflib
      commands:
        - pip check
        - python -c "from rdflib import term; assert term.html5rdf"

  - name: rdflib-with-lxml
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("rdflib", max_pin="x.x.x") }}
        - lxml >=4.3,<6.0
    test:
      requires:
        - pip
      imports:
        - rdflib
      commands:
        - pip check
        - python -c "from rdflib.plugins.sparql.results import xmlresults; assert xmlresults.lxml_etree"

  - name: rdflib-with-orjson
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("rdflib", max_pin="x.x.x") }}
        - orjson >=3.9.13,<4
    test:
      requires:
        - pip
      imports:
        - rdflib
      commands:
        - pip check
        - python -c "from rdflib.plugins.sparql.results import jsonresults; assert jsonresults.orjson"

  - name: rdflib-with-all
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("rdflib-with-html", max_pin="x.x.x") }}
        - {{ pin_subpackage("rdflib-with-lxml", max_pin="x.x.x") }}
        - {{ pin_subpackage("rdflib-with-networkx", max_pin="x.x.x") }}
        - {{ pin_subpackage("rdflib-with-orjson", max_pin="x.x.x") }}
        - {{ pin_subpackage("rdflib", max_pin="x.x.x") }}
    test:
      requires:
        - pip
      imports:
        - rdflib
      commands:
        - pip check

  - name: _rdflib-tests
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("rdflib-with-all", max_pin="x.x.x") }}
    test:
      files:
        - run_rdflib_suite.py
      source_files:
        - examples/
        - pyproject.toml
        - test/
      requires:
        - pip
        # uses `no_cover` fixture
        - pytest-cov
        - setuptools
      imports:
        - rdflib
      commands:
        - pip check
        - python run_rdflib_suite.py

about:
  home: https://github.com/RDFLib/rdflib
  license: BSD-3-Clause
  license_file: LICENSE
  summary: RDFLib is a Python library for working with RDF, a simple yet powerful language for representing information.
  dev_url: https://github.com/RDFLib/rdflib
  doc_url: https://rdflib.readthedocs.io

extra:
  feedstock-name: rdflib
  recipe-maintainers:
    - aucampia
    - satra
    - nicholascar
    - bollwyvl
